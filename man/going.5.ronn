going(5) -- configuration files for simple process supervision
==============================================================

DESCRIPTION
-----------

A `going` configuration file contains instructions for how a child process
should be spawned and respawned under supervison.

The file name of the configuration is used internally by `going` to
uniquely identify the child process.

The configuration consist of one instruction per line. Instructions are
composed of a `key` and `value` seperated by an equal sign (`=`):

    key=value

The following configuration keys are supported:

  * `cmd`:
    The path to the supervised child process' executable with
    zero or more arguments. This configuration key is required.
  * `cwd`:
    The current working directory the supervised child process is spawned in.
    This configuration key is optional and defaults to `/`.

EXAMPLES
--------

A simple supervision of a salt-minion process with an argument to set
its log level to error:

    cmd=/usr/bin/salt-minion -l error

Supervision of a gunicorn process with arguments to set its configuration file
and the python module to load. Gunicorn needs to be spawned in a working
directory where it can find the given python module:

    cmd=/usr/bin/gunicorn -c /etc/gunicorn.d/mq.conf mq:app
    cwd=/usr/local/src/mq

LIMITS
------

The following limits are defined in the [`going.h`][h] headerfile.

  * `CHILD_NAME_SIZE = 32`:
    The maximum length of the file name of a configuration which is used to
    uniquely identify the child process excluding a terminating null byte.
  * `CHILD_CMD_SIZE = 256`:
    The maximum length of the command line value in a configuration file
    including arguments but excluding a terminating null byte.
  * `CHILD_CWD_SIZE = 256`:
    The maximum length of the current working directory value in a
    configuration file including arguments but excluding a terminating
    null byte.

AUTHOR
------

Eivind Uggedal <eivind@uggedal.com>

SEE ALSO
--------

going(8)
