going(8) -- simple process supervisor
=====================================

SYNOPSIS
--------

`going` [`-d` <confdir>]

DESCRIPTION
-----------

`going` spawns child processes as defined in one or more going(5) style
configuration files. Child processes are promptly respawned if they terminate.

If a child terminates too fast (within a window of 5 seconds) it will be
quarantined for 30 seconds before it will be respawned.

OPTIONS
-------

  * `-d`:
    Use an alternate configuration directory.

EXAMPLES
--------

`going` is designed to be started from init(8)'s inittab(5) with the
*respawn* action:

    GO:12345:respawn:/usr/sbin/going

`going` will thus be started when you reload init(8)'s configuration:

    init q

Add simple going(5) style configs for your services to `/etc/going.d`:

    cat >>/etc/going.d/salt-minion <<EOF
    cmd=/usr/bin/salt-minion
    EOF

You can gracefully reload configurations after you've added or
removed files in `/etc/going.d` with:

    kill -HUP <pid of going>


FILES
-----

  * `/etc/going.d`:
    The default directory where `going` reads configuration files
    as specified in going(5).

ERROR LOGGING
-------------

All abnormal events will be logged to the daemon syslog facility which
normally can be inspected in `/var/log/daemon.log`.

SIGNALS
-------

  * `SIGHUP`:
    Trigger `going` to immediately iterate all configurations in
    its configuration directory and spawn processes for new configuration
    files and terminate running processes lacking a configuration file.
  * `SIGTERM`:
    Trigger `going` to send the same signal to all its supervised processes
    and clean up before terminating with exit(3).

BUGS
----

Reloading configurations for already running processes is currently not
supported without sending `going` a `SIGTERM` signal which terminates all
its supervised processeses.

AUTHOR
------

Eivind Uggedal <eivind@uggedal.com>

SEE ALSO
--------

going(5), init(8), inittab(5)
